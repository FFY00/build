[tox]
minversion = 3.14.0
envlist =
    fix_lint
    py38
    py37
    py36
    py35
    py27
    pypy
    pypy3
    cov
    docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    PIP_DISABLE_PIP_VERSION_CHECK=1
    {py27,pypy}: PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
extras = test
commands =
    pytest \
    --cov {envsitepackagesdir}/build --cov-context=test \
    --cov-report=html:{envtmpdir}/html \
    --cov-report=xml:{toxworkdir}/coverage.{envname}.xml \
    tests {posargs}

[testenv:cov]
description = combine coverage data
deps =
    coverage >= 5.0.1
    diff-cover >= 3
extras =
skip_install = True
passenv = DIFF_AGAINST
setenv =
    COVERAGE_FILE={toxworkdir}/.coverage
commands =
    python -m coverage combine
    python -m coverage report --skip-covered --show-missing
    python -m coverage xml -o {toxworkdir}/coverage.xml
    python -m coverage html -d {toxworkdir}/htmlcov
    python -m diff_cover.diff_cover_tool --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py38
    py37
    py36
    py35
    py27
    pypy
    pypy3
parallel_show_output = True

[testenv:docs]
basepython = python3.8
description = build documentation
extras = doc
passenv = *
commands =
    sphinx-build -d "{envtmpdir}/doctree" docs/source "{toxworkdir}/docs_out" --color -b html {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.8
passenv = *
deps = pre-commit >= 2
skip_install = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:dev]
description = generate a DEV environment
extras = test, doc
usedevelop = True
commands =
    pip list --format=columns
    python -c 'import sys; print(sys.executable)'
